plugins {
    alias libs.plugins.android.application
    alias libs.plugins.kotlin.android
    id 'kotlin-parcelize'
}

android {
    signingConfigs {
        release {
            storeFile file("${rootProject.projectDir}/chuck_signing_key.jks")
            keyAlias System.getenv("SigningKeyAlias")
            storePassword System.getenv("SigningKeyPassword")
            keyPassword System.getenv("SigningKeyPassword")
        }
    }
    compileSdk 33

    defaultConfig {
        applicationId "com.serge.chuckstaplist"
        minSdk 26
        targetSdk 33
        versionCode 2
        versionName "v1.0.1"

        buildConfigField "String", "CALENDAR_API_KEY", System.getenv("GoogleApiKey") ?: getLocalProperty("calendar_key")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    applicationVariants.configureEach { variant ->
        kotlin.sourceSets {
            getByName(name) {
                kotlin.srcDir("build/generated/ksp/${variant.name}/kotlin")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.compiler.get()
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            excludes += '/META-INF/DEPENDENCIES'
        }
    }
    namespace 'com.serge.chuckstaplist'
}

dependencies {
    implementation project(':kmm')
    implementation platform('androidx.compose:compose-bom:2023.05.01')
    implementation libs.bundles.androidx.compose
    implementation libs.bundles.androidx.lifecycle
    implementation libs.androidx.browser
    implementation libs.androidx.core
    implementation libs.square.seismic
    implementation libs.koin.compose
    implementation libs.kotlinx.datetime
    debugImplementation libs.androidx.compose.ui.tooling
}

def getLocalProperty(String key) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty(key)
}
